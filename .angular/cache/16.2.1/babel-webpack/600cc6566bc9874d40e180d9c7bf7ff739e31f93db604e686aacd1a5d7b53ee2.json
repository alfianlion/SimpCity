{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/game.service\";\nimport * as i2 from \"@angular/common\";\nfunction TileComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"p\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.buildingsAvailable[ctx_r0.randomizedBuildings()]);\n  }\n}\nexport class TileComponent {\n  constructor(gameservice) {\n    this.buildingPlaced = null;\n    this.buildingsAvailable = gameservice.totalbuildings;\n  }\n  randomizedBuildings() {\n    console.log(Math.floor(Math.random() * this.buildingsAvailable.length));\n    return Math.floor(Math.random() * this.buildingsAvailable.length);\n  }\n}\n_class = TileComponent;\n_class.ɵfac = function TileComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.GameService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-tile\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"border flex justify-center items-center align-middle bg-blue-600 shadow-md w-1/4 h-36 cursor-pointer\", 4, \"ngFor\", \"ngForOf\"], [1, \"border\", \"flex\", \"justify-center\", \"items-center\", \"align-middle\", \"bg-blue-600\", \"shadow-md\", \"w-1/4\", \"h-36\", \"cursor-pointer\"], [1, \"text-7xl\", \"align-middle\"]],\n  template: function TileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TileComponent_div_0_Template, 3, 1, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.buildingsAvailable);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0aWxlLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90aWxlL3RpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0tBQWdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","buildingsAvailable","randomizedBuildings","TileComponent","constructor","gameservice","buildingPlaced","totalbuildings","console","log","Math","floor","random","length","ɵɵdirectiveInject","i1","GameService","selectors","decls","vars","consts","template","TileComponent_Template","rf","ctx","ɵɵtemplate","TileComponent_div_0_Template","ɵɵproperty"],"sources":["/home/alfianlion/SimpCity/src/app/components/tile/tile.component.ts","/home/alfianlion/SimpCity/src/app/components/tile/tile.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BuildingSetUp, GameService } from 'src/app/game.service';\n\n@Component({\n  selector: 'app-tile',\n  templateUrl: './tile.component.html',\n  styleUrls: ['./tile.component.css']\n})\nexport class TileComponent {\n  buildingsAvailable : BuildingSetUp\n  buildingPlaced = null;\n\n  constructor(gameservice: GameService) {\n    this.buildingsAvailable = gameservice.totalbuildings\n  } \n\n  randomizedBuildings() : number {\n    console.log(Math.floor(Math.random()*this.buildingsAvailable.length));    \n    return Math.floor(Math.random()*this.buildingsAvailable.length)\n  }\n}\n","<div *ngFor=\"let building of buildingsAvailable\" class=\"border flex justify-center items-center align-middle bg-blue-600 shadow-md w-1/4 h-36 cursor-pointer\">\n    <p class=\"text-7xl align-middle\">{{buildingsAvailable[randomizedBuildings()]}}</p>\n</div>\n"],"mappings":";;;;;;ICAAA,EAAA,CAAAC,cAAA,aAA8J;IACzHD,EAAA,CAAAE,MAAA,GAA6C;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAjDH,EAAA,CAAAI,SAAA,GAA6C;IAA7CJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,kBAAA,CAAAD,MAAA,CAAAE,mBAAA,IAA6C;;;ADOlF,OAAM,MAAOC,aAAa;EAIxBC,YAAYC,WAAwB;IAFpC,KAAAC,cAAc,GAAG,IAAI;IAGnB,IAAI,CAACL,kBAAkB,GAAGI,WAAW,CAACE,cAAc;EACtD;EAEAL,mBAAmBA,CAAA;IACjBM,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,IAAI,CAACX,kBAAkB,CAACY,MAAM,CAAC,CAAC;IACrE,OAAOH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,IAAI,CAACX,kBAAkB,CAACY,MAAM,CAAC;EACjE;;SAXWV,aAAa;;mBAAbA,MAAa,EAAAT,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAAbb,MAAa;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR1B7B,EAAA,CAAA+B,UAAA,IAAAC,4BAAA,iBAEM;;;MAFoBhC,EAAA,CAAAiC,UAAA,YAAAH,GAAA,CAAAvB,kBAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}